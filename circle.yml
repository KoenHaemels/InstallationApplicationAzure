---
machine:
  timezone: Europe/Brussels
  environment:
    PACKER_VERSION: 0.8.1
    RESOURCEGROUP: "autoscale1"
general:
  branches:
    only:
      # List of branches to ignore
      - master
dependencies:
  cache_directories:
    - "~/bin"
  pre:
    # =======================
    # Installation Packer
    # =======================
    - mkdir -p ~/packer
    - wget https://releases.hashicorp.com/packer/0.12.0/packer_0.12.0_linux_amd64.zip
    - unzip packer_0.12.0_linux_amd64.zip
    - mv packer ~/bin/packer
    # =======================
    # Installation GIT + clone repository
    # =======================
    - sudo apt-get install git -y
    - mkdir -p ~/map
    - cd ~/map
    - git clone https://github.com/KoenHaemels/InstallationApplicationAzure.git
    - cd InstallationApplicationAzure/
    - sudo chmod +x main.sh
    # =======================
    # Installation / authentication AZURE
    # =======================
    - sudo apt-get update && sudo apt-get install -y libssl-dev libffi-dev python-dev build-essential
    - echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ wheezy main" | sudo tee /etc/apt/sources.list.d/azure-cli.list
    - sudo apt-key adv --keyserver packages.microsoft.com --recv-keys 417A0893
    - sudo apt-get install apt-transport-https -y
    - sudo apt-get update && sudo apt-get install azure-cli -y
    - az login -u http://localhost --service-principal --tenant ${ACCOUNT_ID_AZURE} --password ${ACCOUNT_PASSWORD_AZURE}
test:
  override:
    # =======================
    # Run installation of the application
    # =======================
    - ./main.sh
    # =======================
    # Check JSON file
    # =======================
    - ~/bin/packer validate Credits/template.json
    # =======================
deployment:
  production:
    pre:
      - pyenv global 2.7.12
  packer:
    branch: master
    commands:
      # =======================
      # Change name to new BUILD ID
      # =======================
      - /bin/sed -i "s/clientID/"${CLIENT_ID_AZURE}"/g" Credits/template.json
      - /bin/sed -i "s/clientsecretID/"${CLIENT_SECRET_AZURE}"/g" Credits/template.json
      - /bin/sed -i "s/subscriptionID/"${SUBSCRIPTION_ID_AZURE}"/g" Credits/template.json
      # =======================
      # Delete previous image
      # =======================
      - az storage blob list --container-name system --account-name imagestoragecvo --account-key ${ACCOUNT_KEY_AZURE} | grep -m 1 "name" | /bin/sed -e 's/name//g' -e 's/"//g' -e 's/,//g' -e 's/://g' -e 's/     //g' > vhdname2.txt
      - cat vhdname2.txt
      - az storage blob delete -c system -n $(cat vhdname2.txt) --account-name ${ACCOUNT_NAME} --account-key ${ACCOUNT_KEY_AZURE}
      - az storage blob list --container-name system --account-name ${ACCOUNT_NAME} --account-key ${ACCOUNT_KEY_AZURE} | grep -m 1 "name" | /bin/sed -e 's/name//g' -e 's/"//g' -e 's/,//g' -e 's/://g' -e 's/     //g' > jsonname.txt
      - cat jsonname.txt
      - az storage blob delete -c system -n $(cat jsonname.txt) --account-name ${ACCOUNT_NAME} --account-key ${ACCOUNT_KEY_AZURE}
      # =======================
      # Build new image
      # =======================
      - ~/bin/packer build Credits/template.json
      # =======================
      # Get full path image
      # =======================
      - az storage blob list --container-name system --account-name ${ACCOUNT_NAME} --account-key ${ACCOUNT_KEY_AZURE} | grep -m 1 "name" | /bin/sed -e 's/name//g' -e 's/"//g' -e 's/,//g' -e 's/://g' -e 's|     |https://imagestoragecvo.blob.core.windows.net/system/|g' > vhdname.txt
      - az vmss list -g ${RESOURCEGROUP} | grep -m 1 "name" | sed -e 's/name//g' -e 's/"//g' -e 's/,//g' -e 's/://g' -e 's/     //g' > scalename.txt
      - az vmss update -g ${RESOURCEGROUP} -n $(cat scalename.txt) --set virtualMachineProfile.storageProfile.osDisk.image.uri=$(cat vhdname.txt)
      - az vmss reimage -n $(cat scalename.txt) -g ${RESOURCEGROUP} --instance-id 0
      - az vmss reimage -n $(cat scalename.txt) -g ${RESOURCEGROUP} --instance-id 1